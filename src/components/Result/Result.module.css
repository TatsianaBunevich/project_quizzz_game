.result {
  text-align: center;
  margin: 2em auto;
}

.circularProgress {
  --size: 250px;
  --half-size: calc(var(--size) / 2);
  --stroke-width: 0.75em;
  --radius: calc((var(--size) - var(--stroke-width)) / 2);
  --circumference: calc(var(--radius) * pi * 2);
  --dash: calc((var(--progress) * var(--circumference)) / 100);
  cursor: pointer;
  animation: progress-animation 1s linear 0s 1 forwards;
  width: var(--size);
  height: var(--size);
  viewbox: 0 0 var(--size) var(--size);
}

.circularProgress circle {
  cx: var(--half-size);
  cy: var(--half-size);
  r: var(--radius);
  stroke-width: var(--stroke-width);
  fill: none;
  stroke-linecap: round;
}

.background {
  stroke: var(--progress-color);
}

.foreground {
  transform: rotate(-90deg);
  transform-origin: var(--half-size) var(--half-size);
  stroke-dasharray: var(--dash) calc(var(--circumference) - var(--dash));
  transition: stroke-dasharray 0.3s linear 0s;
}

.good {
  stroke: var(--good-color);
}

.normal {
  stroke: var(--normal-color);
}

.bad {
  stroke: var(--bad-color);
}

.circularProgressValue {
  font-family: "Karla", sans-serif;
  font-size: 4em;
  font-weight: 700;
  fill: var(--color);
}

.text {
  opacity: 0;
  transition: opacity 0.5s;
}

.text.show {
  opacity: 1;
}

@property --progress {
  syntax: "<number>";
  inherits: false;
  initial-value: 0;
}

@keyframes progress-animation {
  from {
    --progress: 0;
  }
  to {
    --progress: var(--score);
  }
}

.time {
  font-family: "Karla", sans-serif;
  font-size: 2em;
  font-weight: 700;
  margin-top: 1em;
}

@media (min-width: 992px) {
  .circularProgress {
    --size: 350px;
  }
}
